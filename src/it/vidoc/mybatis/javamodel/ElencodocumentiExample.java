package it.vidoc.mybatis.javamodel;

import java.util.ArrayList;
import java.util.List;

public class ElencodocumentiExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table elencodocumenti
	 * @mbggenerated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table elencodocumenti
	 * @mbggenerated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table elencodocumenti
	 * @mbggenerated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table elencodocumenti
	 * @mbggenerated
	 */
	public ElencodocumentiExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table elencodocumenti
	 * @mbggenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table elencodocumenti
	 * @mbggenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table elencodocumenti
	 * @mbggenerated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table elencodocumenti
	 * @mbggenerated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table elencodocumenti
	 * @mbggenerated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table elencodocumenti
	 * @mbggenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table elencodocumenti
	 * @mbggenerated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table elencodocumenti
	 * @mbggenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table elencodocumenti
	 * @mbggenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table elencodocumenti
	 * @mbggenerated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table elencodocumenti
	 * @mbggenerated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andProgrrigaIsNull() {
			addCriterion("progrriga is null");
			return (Criteria) this;
		}

		public Criteria andProgrrigaIsNotNull() {
			addCriterion("progrriga is not null");
			return (Criteria) this;
		}

		public Criteria andProgrrigaEqualTo(Integer value) {
			addCriterion("progrriga =", value, "progrriga");
			return (Criteria) this;
		}

		public Criteria andProgrrigaNotEqualTo(Integer value) {
			addCriterion("progrriga <>", value, "progrriga");
			return (Criteria) this;
		}

		public Criteria andProgrrigaGreaterThan(Integer value) {
			addCriterion("progrriga >", value, "progrriga");
			return (Criteria) this;
		}

		public Criteria andProgrrigaGreaterThanOrEqualTo(Integer value) {
			addCriterion("progrriga >=", value, "progrriga");
			return (Criteria) this;
		}

		public Criteria andProgrrigaLessThan(Integer value) {
			addCriterion("progrriga <", value, "progrriga");
			return (Criteria) this;
		}

		public Criteria andProgrrigaLessThanOrEqualTo(Integer value) {
			addCriterion("progrriga <=", value, "progrriga");
			return (Criteria) this;
		}

		public Criteria andProgrrigaIn(List<Integer> values) {
			addCriterion("progrriga in", values, "progrriga");
			return (Criteria) this;
		}

		public Criteria andProgrrigaNotIn(List<Integer> values) {
			addCriterion("progrriga not in", values, "progrriga");
			return (Criteria) this;
		}

		public Criteria andProgrrigaBetween(Integer value1, Integer value2) {
			addCriterion("progrriga between", value1, value2, "progrriga");
			return (Criteria) this;
		}

		public Criteria andProgrrigaNotBetween(Integer value1, Integer value2) {
			addCriterion("progrriga not between", value1, value2, "progrriga");
			return (Criteria) this;
		}

		public Criteria andDataIsNull() {
			addCriterion("data is null");
			return (Criteria) this;
		}

		public Criteria andDataIsNotNull() {
			addCriterion("data is not null");
			return (Criteria) this;
		}

		public Criteria andDataEqualTo(String value) {
			addCriterion("data =", value, "data");
			return (Criteria) this;
		}

		public Criteria andDataNotEqualTo(String value) {
			addCriterion("data <>", value, "data");
			return (Criteria) this;
		}

		public Criteria andDataGreaterThan(String value) {
			addCriterion("data >", value, "data");
			return (Criteria) this;
		}

		public Criteria andDataGreaterThanOrEqualTo(String value) {
			addCriterion("data >=", value, "data");
			return (Criteria) this;
		}

		public Criteria andDataLessThan(String value) {
			addCriterion("data <", value, "data");
			return (Criteria) this;
		}

		public Criteria andDataLessThanOrEqualTo(String value) {
			addCriterion("data <=", value, "data");
			return (Criteria) this;
		}

		public Criteria andDataLike(String value) {
			addCriterion("data like", value, "data");
			return (Criteria) this;
		}

		public Criteria andDataNotLike(String value) {
			addCriterion("data not like", value, "data");
			return (Criteria) this;
		}

		public Criteria andDataIn(List<String> values) {
			addCriterion("data in", values, "data");
			return (Criteria) this;
		}

		public Criteria andDataNotIn(List<String> values) {
			addCriterion("data not in", values, "data");
			return (Criteria) this;
		}

		public Criteria andDataBetween(String value1, String value2) {
			addCriterion("data between", value1, value2, "data");
			return (Criteria) this;
		}

		public Criteria andDataNotBetween(String value1, String value2) {
			addCriterion("data not between", value1, value2, "data");
			return (Criteria) this;
		}

		public Criteria andProgrrigaaccountIsNull() {
			addCriterion("progrrigaaccount is null");
			return (Criteria) this;
		}

		public Criteria andProgrrigaaccountIsNotNull() {
			addCriterion("progrrigaaccount is not null");
			return (Criteria) this;
		}

		public Criteria andProgrrigaaccountEqualTo(Integer value) {
			addCriterion("progrrigaaccount =", value, "progrrigaaccount");
			return (Criteria) this;
		}

		public Criteria andProgrrigaaccountNotEqualTo(Integer value) {
			addCriterion("progrrigaaccount <>", value, "progrrigaaccount");
			return (Criteria) this;
		}

		public Criteria andProgrrigaaccountGreaterThan(Integer value) {
			addCriterion("progrrigaaccount >", value, "progrrigaaccount");
			return (Criteria) this;
		}

		public Criteria andProgrrigaaccountGreaterThanOrEqualTo(Integer value) {
			addCriterion("progrrigaaccount >=", value, "progrrigaaccount");
			return (Criteria) this;
		}

		public Criteria andProgrrigaaccountLessThan(Integer value) {
			addCriterion("progrrigaaccount <", value, "progrrigaaccount");
			return (Criteria) this;
		}

		public Criteria andProgrrigaaccountLessThanOrEqualTo(Integer value) {
			addCriterion("progrrigaaccount <=", value, "progrrigaaccount");
			return (Criteria) this;
		}

		public Criteria andProgrrigaaccountIn(List<Integer> values) {
			addCriterion("progrrigaaccount in", values, "progrrigaaccount");
			return (Criteria) this;
		}

		public Criteria andProgrrigaaccountNotIn(List<Integer> values) {
			addCriterion("progrrigaaccount not in", values, "progrrigaaccount");
			return (Criteria) this;
		}

		public Criteria andProgrrigaaccountBetween(Integer value1, Integer value2) {
			addCriterion("progrrigaaccount between", value1, value2, "progrrigaaccount");
			return (Criteria) this;
		}

		public Criteria andProgrrigaaccountNotBetween(Integer value1, Integer value2) {
			addCriterion("progrrigaaccount not between", value1, value2, "progrrigaaccount");
			return (Criteria) this;
		}

		public Criteria andRiferimentiIsNull() {
			addCriterion("riferimenti is null");
			return (Criteria) this;
		}

		public Criteria andRiferimentiIsNotNull() {
			addCriterion("riferimenti is not null");
			return (Criteria) this;
		}

		public Criteria andRiferimentiEqualTo(String value) {
			addCriterion("riferimenti =", value, "riferimenti");
			return (Criteria) this;
		}

		public Criteria andRiferimentiNotEqualTo(String value) {
			addCriterion("riferimenti <>", value, "riferimenti");
			return (Criteria) this;
		}

		public Criteria andRiferimentiGreaterThan(String value) {
			addCriterion("riferimenti >", value, "riferimenti");
			return (Criteria) this;
		}

		public Criteria andRiferimentiGreaterThanOrEqualTo(String value) {
			addCriterion("riferimenti >=", value, "riferimenti");
			return (Criteria) this;
		}

		public Criteria andRiferimentiLessThan(String value) {
			addCriterion("riferimenti <", value, "riferimenti");
			return (Criteria) this;
		}

		public Criteria andRiferimentiLessThanOrEqualTo(String value) {
			addCriterion("riferimenti <=", value, "riferimenti");
			return (Criteria) this;
		}

		public Criteria andRiferimentiLike(String value) {
			addCriterion("riferimenti like", value, "riferimenti");
			return (Criteria) this;
		}

		public Criteria andRiferimentiNotLike(String value) {
			addCriterion("riferimenti not like", value, "riferimenti");
			return (Criteria) this;
		}

		public Criteria andRiferimentiIn(List<String> values) {
			addCriterion("riferimenti in", values, "riferimenti");
			return (Criteria) this;
		}

		public Criteria andRiferimentiNotIn(List<String> values) {
			addCriterion("riferimenti not in", values, "riferimenti");
			return (Criteria) this;
		}

		public Criteria andRiferimentiBetween(String value1, String value2) {
			addCriterion("riferimenti between", value1, value2, "riferimenti");
			return (Criteria) this;
		}

		public Criteria andRiferimentiNotBetween(String value1, String value2) {
			addCriterion("riferimenti not between", value1, value2, "riferimenti");
			return (Criteria) this;
		}

		public Criteria andTipodocumentoIsNull() {
			addCriterion("tipodocumento is null");
			return (Criteria) this;
		}

		public Criteria andTipodocumentoIsNotNull() {
			addCriterion("tipodocumento is not null");
			return (Criteria) this;
		}

		public Criteria andTipodocumentoEqualTo(String value) {
			addCriterion("tipodocumento =", value, "tipodocumento");
			return (Criteria) this;
		}

		public Criteria andTipodocumentoNotEqualTo(String value) {
			addCriterion("tipodocumento <>", value, "tipodocumento");
			return (Criteria) this;
		}

		public Criteria andTipodocumentoGreaterThan(String value) {
			addCriterion("tipodocumento >", value, "tipodocumento");
			return (Criteria) this;
		}

		public Criteria andTipodocumentoGreaterThanOrEqualTo(String value) {
			addCriterion("tipodocumento >=", value, "tipodocumento");
			return (Criteria) this;
		}

		public Criteria andTipodocumentoLessThan(String value) {
			addCriterion("tipodocumento <", value, "tipodocumento");
			return (Criteria) this;
		}

		public Criteria andTipodocumentoLessThanOrEqualTo(String value) {
			addCriterion("tipodocumento <=", value, "tipodocumento");
			return (Criteria) this;
		}

		public Criteria andTipodocumentoLike(String value) {
			addCriterion("tipodocumento like", value, "tipodocumento");
			return (Criteria) this;
		}

		public Criteria andTipodocumentoNotLike(String value) {
			addCriterion("tipodocumento not like", value, "tipodocumento");
			return (Criteria) this;
		}

		public Criteria andTipodocumentoIn(List<String> values) {
			addCriterion("tipodocumento in", values, "tipodocumento");
			return (Criteria) this;
		}

		public Criteria andTipodocumentoNotIn(List<String> values) {
			addCriterion("tipodocumento not in", values, "tipodocumento");
			return (Criteria) this;
		}

		public Criteria andTipodocumentoBetween(String value1, String value2) {
			addCriterion("tipodocumento between", value1, value2, "tipodocumento");
			return (Criteria) this;
		}

		public Criteria andTipodocumentoNotBetween(String value1, String value2) {
			addCriterion("tipodocumento not between", value1, value2, "tipodocumento");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table elencodocumenti
	 * @mbggenerated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table elencodocumenti
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}